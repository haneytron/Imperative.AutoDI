<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Imperative.AutoDI</PackageId>
    <Version>1.1.0</Version>
    <Authors>David Haney</Authors>
    <Company>Imperative Bytes, LLC</Company>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>dependency injection di auto autodi</PackageTags>
    <Summary>Automatically add dependencies to your IServiceCollection by namespace.</Summary>
    <Description>Automatically add dependencies to your `IServiceCollection` by namespace. Matches on convention of classes where the class name ends with the interface name minus the leading `I`. Example: `InMemoryCacheManager` and `CacheManager` will match `ICacheManager`.</Description>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.0" />
  </ItemGroup>

</Project>
